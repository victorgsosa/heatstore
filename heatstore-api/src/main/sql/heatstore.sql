DROP VIEW "SYSTEM"."DETECTIONS_COUNT";
DROP TABLE "SYSTEM"."DETECTION";
DROP TABLE "SYSTEM"."IMAGE";
DROP TABLE "SYSTEM"."ROLE_ACTIONS";
DROP TABLE "SYSTEM"."ROLE";
DROP TABLE "SYSTEM"."ACTION";
DROP TABLE "SYSTEM"."CAMERA_ROLES";
DROP TABLE "SYSTEM"."CAMERA";
DROP TABLE "SYSTEM"."PERSON";

CREATE ROW TABLE "SYSTEM"."CAMERA"(
	"ID" VARCHAR(36) CS_STRING,
	"HEIGHT" DOUBLE CS_DOUBLE,
	"FOCAL_LENGTH" DOUBLE CS_DOUBLE,
	"A_DISTANCE" DOUBLE CS_DOUBLE,
	"AX" DOUBLE CS_DOUBLE,
	"AY" DOUBLE CS_DOUBLE,
	"B_DISTANCE" DOUBLE CS_DOUBLE,
	"BX" DOUBLE CS_DOUBLE,
	"BY" DOUBLE CS_DOUBLE,
	"C_DISTANCE" DOUBLE CS_DOUBLE,
	"CX" DOUBLE CS_DOUBLE,
	"CY" DOUBLE CS_DOUBLE,
	PRIMARY KEY (
		"ID"
	)
);

CREATE COLUMN TABLE "SYSTEM"."IMAGE"(
	"ID" BIGINT CS_FIXED NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"DATE" LONGDATE CS_LONGDATE NOT NULL,
	"CAMERA_ID" VARCHAR(36),
	PRIMARY KEY (
		"ID"
	)
) UNLOAD PRIORITY 5 AUTO MERGE;
ALTER TABLE "SYSTEM"."IMAGE" ADD FOREIGN KEY ( "CAMERA_ID" ) REFERENCES "SYSTEM"."CAMERA" ("ID") ON UPDATE RESTRICT ON DELETE RESTRICT;

CREATE COLUMN TABLE  "SYSTEM"."DETECTION" ("ID" BIGINT CS_FIXED GENERATED BY DEFAULT AS IDENTITY NOT NULL ,
	 "IMAGE_ID" BIGINT CS_FIXED NOT NULL ,
	 "SCORE" DOUBLE CS_DOUBLE,
	 "X_MIN" DOUBLE CS_DOUBLE,
	 "Y_MIN" DOUBLE CS_DOUBLE,
	 "X_MAX" DOUBLE CS_DOUBLE,
	 "Y_MAX" DOUBLE CS_DOUBLE,
	 "X" DOUBLE CS_DOUBLE,
	 "Y" DOUBLE CS_DOUBLE,
	 PRIMARY KEY ("ID")) UNLOAD PRIORITY 5 AUTO MERGE;
ALTER TABLE "SYSTEM"."DETECTION" ADD FOREIGN KEY ( "IMAGE_ID" ) REFERENCES "SYSTEM"."IMAGE" ("ID") ON UPDATE CASCADE ON DELETE CASCADE;


CREATE VIEW  "SYSTEM"."DETECTIONS_COUNT" ( "YEAR",
	 "MONTH",
	 "DAY",
	 "HOUR",
	 "DATE",
	 "X_REGION",
	 "Y_REGION",
	 "X_START",
	 "X_END",
	 "Y_START",
	 "Y_END",
	 "COUNT" ) AS SELECT
	 "YEAR",
	 "MONTH",
	 "DAY",
	 "HOUR",
	 "DATE",
	 "X_REGION",
	 "Y_REGION",
	 "X_REGION" * 0.1 AS "X_START",
	 ("X_REGION" + 1 ) * 0.1 AS "X_END",
	 "Y_REGION" * 0.1 AS "Y_START",
	 ("Y_REGION" + 1 ) * 0.1 AS "Y_END",
	 COUNT(*) AS "COUNT" 
FROM ( SELECT
	 YEAR( I."DATE" ) AS "YEAR",
	 MONTH( I."DATE") AS "MONTH",
	 DAYOFMONTH( I."DATE" ) AS "DAY",
	 HOUR( I."DATE") AS "HOUR",
	 TO_DATE(I."DATE") AS "DATE",
	 FLOOR( D."X" / 0.1 ) AS "X_REGION",
	 FLOOR( D."Y" / 0.1 ) AS "Y_REGION" 
	FROM DETECTION AS D 
	LEFT OUTER JOIN IMAGE AS I ON D."IMAGE_ID" = I."ID" ) 
GROUP BY "YEAR",
	 "MONTH",
	 "DAY",
	 "HOUR",
	 "DATE",
	 "X_REGION",
	 "Y_REGION" WITH READ ONLY;

CREATE ROW TABLE  "SYSTEM"."ROLE" ( "ID" VARCHAR(20) CS_STRING,
	 "DESCRIPTION" VARCHAR(255) CS_STRING,
	 PRIMARY KEY ( "ID" ) ) ;


CREATE ROW TABLE  "SYSTEM"."ACTION" ( "ID" VARCHAR(20) CS_STRING,
	 "DESCRIPTION" VARCHAR(255) CS_STRING,
	 PRIMARY KEY ( "ID" ) );

CREATE ROW TABLE "SYSTEM"."ROLE_ACTIONS"  ( 
	"ROLE_ID" VARCHAR(20) CS_STRING, 
	"ACTION_ID" VARCHAR(20) CS_STRING, 
	PRIMARY KEY ( "ROLE_ID", "ACTION_ID" ) ) ;
ALTER TABLE "SYSTEM"."ROLE_ACTIONS" ADD FOREIGN KEY ( "ROLE_ID" ) REFERENCES "SYSTEM"."ROLE" ("ID") ON UPDATE RESTRICT ON DELETE RESTRICT;
ALTER TABLE "SYSTEM"."ROLE_ACTIONS" ADD FOREIGN KEY ( "ACTION_ID" ) REFERENCES "SYSTEM"."ACTION" ("ID") ON UPDATE RESTRICT ON DELETE RESTRICT;





CREATE ROW TABLE "SYSTEM"."CAMERA_ROLES"  ( 
	"CAMERA_ID" VARCHAR(36) CS_STRING, 
	"ROLE_ID" VARCHAR(20) CS_STRING, 
	PRIMARY KEY ( "CAMERA_ID", "ROLE_ID" )) ;
ALTER TABLE "SYSTEM"."CAMERA_ROLES" ADD FOREIGN KEY ( "CAMERA_ID" ) REFERENCES "SYSTEM"."CAMERA" ("ID") ON UPDATE RESTRICT ON DELETE RESTRICT;
ALTER TABLE "SYSTEM"."CAMERA_ROLES" ADD FOREIGN KEY ( "ROLE_ID" ) REFERENCES "SYSTEM"."ROLE" ("ID") ON UPDATE RESTRICT ON DELETE RESTRICT;



insert into "SYSTEM"."ROLE" values('COUNTER_IN','Counts entering persons');
insert into "SYSTEM"."ROLE" values('COUNTER_OUT','Counts leaving persons');
insert into "SYSTEM"."ROLE" values('CLASSIFICATOR','Counts entering persons');
insert into "SYSTEM"."ROLE" values('LOCATOR','Counts entering persons');

insert into "SYSTEM"."ACTION" values('DETECTION','Detects persons');
insert into "SYSTEM"."ACTION" values('LOCATION','Location of detections in image');
insert into "SYSTEM"."ACTION" values('CROP','Crop detections in image');
insert into "SYSTEM"."ACTION" values('EMBEDDINGS','Map a person into face embeddings');
insert into "SYSTEM"."ACTION" values('CLASSIFY','Add metadata to person embeddings');

insert into "SYSTEM"."ROLE_ACTIONS" values('COUNTER_IN','DETECTION');
insert into "SYSTEM"."ROLE_ACTIONS" values('COUNTER_IN','CROP');
insert into "SYSTEM"."ROLE_ACTIONS" values('COUNTER_IN','EMBEDDINGS');
insert into "SYSTEM"."ROLE_ACTIONS" values('COUNTER_OUT','DETECTION');
insert into "SYSTEM"."ROLE_ACTIONS" values('COUNTER_OUT','CROP');
insert into "SYSTEM"."ROLE_ACTIONS" values('COUNTER_OUT','EMBEDDINGS');
insert into "SYSTEM"."ROLE_ACTIONS" values('CLASSIFICATOR','DETECTION');
insert into "SYSTEM"."ROLE_ACTIONS" values('CLASSIFICATOR','CROP');
insert into "SYSTEM"."ROLE_ACTIONS" values('CLASSIFICATOR','EMBEDDINGS');
insert into "SYSTEM"."ROLE_ACTIONS" values('CLASSIFICATOR','CLASSIFY');
insert into "SYSTEM"."ROLE_ACTIONS" values('LOCATOR','DETECTION');
insert into "SYSTEM"."ROLE_ACTIONS" values('LOCATOR','LOCATION');


CREATE COLUMN TABLE "SYSTEM"."PERSON"(
	"ID" BIGINT CS_FIXED NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"FIRST_SEEN_ON" LONGDATE CS_LONGDATE NOT NULL,
	"LAST_SEEN_ON" LONGDATE CS_LONGDATE NOT NULL,
	PRIMARY KEY (
		"ID"
	)
) UNLOAD PRIORITY 5 AUTO MERGE;

CREATE COLUMN TABLE "SYSTEM"."PERSON_EMBEDDINGS" (
	"PERSON_ID" BIGINT CS_FIXED NOT NULL , 
	"SEQ" INTEGER CS_INT NOT NULL , 
	"VALUE" DOUBLE CS_DOUBLE NOT NULL , 
	PRIMARY KEY INVERTED VALUE ("PERSON_ID", "SEQ")) UNLOAD PRIORITY 5  AUTO MERGE ;

ALTER TABLE "SYSTEM"."PERSON_EMBEDDINGS" ADD FOREIGN KEY ( "PERSON_ID" ) REFERENCES "SYSTEM"."PERSON" ("ID") ON UPDATE RESTRICT ON DELETE RESTRICT;


CREATE TYPE SYSTEM.EMBEDDINGS AS TABLE(SEQ INT, VALUE DOUBLE);

CREATE PROCEDURE "SYSTEM"."FIND_PERSON_BY_EMBEDDINGS_DISTANCE"(
    IN embeddings EMBEDDINGS,
    IN distance_threshold DOUBLE,
    OUT persons PERSON
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
READS SQL DATA AS
BEGIN
    persons_with_distance = SELECT 
        a1."PERSON_ID" AS "PERSON_ID", 
        SUM ((a1."VALUE"-a2."VALUE")*(a1."VALUE"-a2."VALUE")) AS "DISTANCE"
        FROM "PERSON_EMBEDDINGS" AS a1
        INNER JOIN :embeddings AS a2
        ON a1."SEQ" = a2."SEQ"
        GROUP BY a1."PERSON_ID";
    persons = SELECT 
        p."ID",
        "FIRST_SEEN_ON",
        "LAST_SEEN_ON"
        FROM :persons_with_distance AS distance
        INNER JOIN "PERSON" AS p 
        ON distance."PERSON_ID" = p."ID"
        WHERE distance."DISTANCE" <= :distance_threshold;
END;

CREATE COLUMN TABLE "SYSTEM"."PERSON_CLASSIFIER" (
	"PERSON_ID" BIGINT CS_FIXED, "NAME" VARCHAR(20), 
	"VALUE" DOUBLE CS_DOUBLE, 
	PRIMARY KEY INVERTED VALUE ("PERSON_ID", "NAME")) UNLOAD PRIORITY 5  AUTO MERGE ;

ALTER TABLE "SYSTEM"."PERSON_CLASSIFIER" ADD FOREIGN KEY ( "PERSON_ID" ) REFERENCES "SYSTEM"."PERSON" ("ID") ON UPDATE RESTRICT ON DELETE RESTRICT;




