package net.perceptio.heatstore.api.controller.repository.custom;

import net.perceptio.heatstore.api.model.Embeddings;
import net.perceptio.heatstore.api.model.Person;
import org.hibernate.internal.SessionImpl;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.jdbc.datasource.init.UncategorizedScriptException;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

@SuppressWarnings("unused")
public class PersonRepositoryCustomImpl implements PersonRepositoryCustom {
    private static final String NAME = "FIND_NEAR_PERSONS";
    private static final int EMBEDDINGS_SIZE = 512;
    private static final Logger logger = LoggerFactory.getLogger(PersonRepositoryCustomImpl.class);
    @PersistenceContext
    private EntityManager em;

    @Override
    public Collection<Person> findNear(Collection<Embeddings> embeddings, Double distanceThreshold) {
        if (embeddings == null || embeddings.size() != EMBEDDINGS_SIZE) {
            throw new IllegalArgumentException(
                    String.format("Embeddings can't be null and must have %d values",
                            EMBEDDINGS_SIZE));
        }
        List<Person> result = new ArrayList<>();
        ResultSet rs = null;
        CallableStatement findNear = null;
        Connection conn = em.unwrap(SessionImpl.class).connection();
        try {
            findNear = conn.prepareCall
            int pos = 0;
            for (Embeddings e : embeddings) {
                findNear.setDouble(++pos, e.getValue());
            }
            findNear.setDouble(++pos, distanceThreshold);
            findNear.execute();
            do {
                rs = findNear.getResultSet();
                while (rs != null && rs.next()) {
                    result.add(new Person(rs.getLong(1), rs.getTimestamp(2), rs.getTimestamp(3)));
                }
            } while (findNear.getMoreResults());
        } catch (SQLException e) {
            logger.error("Exception on query: ", e);
            throw new UncategorizedScriptException("Exception on query: ", e);
        }
        return result;
    }


}
